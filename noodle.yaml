# Parameters for maskAL
# python maskAL.py --config maskAL.yaml
# explanation can be found here: https://github.com/pieterblok/maskal

# folders
weightsroot: "./noodle/weights"
resultsroot: "./noodle/results"
dataroot: "./noodle/datasets"
initial_train_dir: "./noodle/datasets/initial_train"
traindir: "./noodle/datasets/train"
valdir: "./noodle/datasets/val"
testdir: "./noodle/datasets/test"

# data options
use_initial_train_dir: False
duplicate_initial_model_and_data: False
initial_train_file: ""

# network parameters
network_config: COCO-InstanceSegmentation/mask_rcnn_X_101_32x8d_FPN_3x.yaml
pretrained_weights: COCO-InstanceSegmentation/mask_rcnn_X_101_32x8d_FPN_3x.yaml

# training-parameters
cuda_visible_devices: '0'
classes: ['curry_noodles', 'seafood_noodles', 'soy_sauce_noodles']
transfer_learning_on_previous_models: True
learning_rate: 0.01
warmup_iterations: 500
train_iterations_base: 2500
train_iterations_step_size: 2500
step_image_number: 500
eval_period: 500
checkpoint_period: -1
weight_decay: 0.0001
learning_policy: 'steps_with_decay'
step_ratios: [0.5, 0.8]
gamma: 0.1
train_batch_size: 1
num_workers: 2

# train-sampler
train_sampler: "TrainingSampler"
minority_classes: ['curry_noodles', 'seafood_noodles', 'soy_sauce_noodles']
# minority_classes: ['damaged', 'matured', 'cateye', 'headrot']
repeat_factor_smallest_class: 1.0

# evaluation-parameters
confidence_threshold: 0.5
nms_threshold: 0.2

# active-learning sampling
experiment_name: 'exp1'
strategy: 'uncertainty'
mode: 'mean'
initial_datasize: 5
pool_size: 50
equal_pool_size: True
loops: 5
dropout_probability: 0.25
mcd_iterations: 10
iou_thres: 0.5
auto_annotate: True
export_format: labelme
supervisely_meta_json: "./datasets/meta.json"
